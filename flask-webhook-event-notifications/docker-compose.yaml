version: "3.8"
networks:
  airflow_network:
    external: true
    name: learning-airflow_171396_airflow
services:
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper-volume:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - airflow_network
  
  
  kafka:
    restart: always
    image: docker.io/bitnami/kafka:3.3
    ports:
      - "9093:9093"
    volumes:
      - "kafka-volume:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper

  flaskapp:
    container_name: flaskapp
    build:
      context: .
    ports:
      - "35000:5000"
    depends_on:
      - minio
    environment:
      FLASK_ENV: development
    volumes:
      - ./app:/app  # Bind mount the FlaskApp directory


  minio:
    container_name: minio
    image: minio/minio
    command: server /data --console-address ":9001"
    ports:
      - "39000:9000"
      - "39001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    networks:
      - airflow_network     
    volumes:
      - minio_data:/data

volumes:
  minio_data:
  kafka-volume:
  zookeeper-volume:
